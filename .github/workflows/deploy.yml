name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  setup-build-deploy:
    name: Setup, Build, Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin'

    - name: Verify Google Cloud Authentication
      run: |
        echo "Verifying Google Cloud Authentication..."
        gcloud auth list
        gcloud config list
        gcloud projects list

    - name: Configure Docker
      run: |
        echo "Configuring Docker authentication..."
        gcloud auth configure-docker --quiet
        echo "Docker configuration complete"

    - name: Build and Push Cart Service
      run: |
        echo "Building Cart Service..."
        docker build -t gcr.io/$PROJECT_ID/cart-service:$GITHUB_SHA -f packages/cart-service/Dockerfile .
        echo "Pushing Cart Service image..."
        docker push gcr.io/$PROJECT_ID/cart-service:$GITHUB_SHA

    - name: Build and Push Order Service
      run: |
        echo "Building Order Service..."
        docker build -t gcr.io/$PROJECT_ID/order-service:$GITHUB_SHA -f packages/order-service/Dockerfile .
        echo "Pushing Order Service image..."
        docker push gcr.io/$PROJECT_ID/order-service:$GITHUB_SHA

    - name: Build and Push Inventory Service
      run: |
        echo "Building Inventory Service..."
        docker build -t gcr.io/$PROJECT_ID/inventory-service:$GITHUB_SHA -f packages/inventory-service/Dockerfile .
        echo "Pushing Inventory Service image..."
        docker push gcr.io/$PROJECT_ID/inventory-service:$GITHUB_SHA

    - name: Build and Push Notification Service
      run: |
        echo "Building Notification Service..."
        docker build -t gcr.io/$PROJECT_ID/notification-service:$GITHUB_SHA -f packages/notification-service/Dockerfile .
        echo "Pushing Notification Service image..."
        docker push gcr.io/$PROJECT_ID/notification-service:$GITHUB_SHA

    - name: Deploy Cart Service
      run: |
        echo "Deploying Cart Service to Cloud Run..."
        gcloud run deploy cart-service \
          --image gcr.io/$PROJECT_ID/cart-service:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="DB_HOST=$DB_HOST,DB_PORT=$DB_PORT,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME,NODE_ENV=production"

    - name: Deploy Order Service
      run: |
        echo "Deploying Order Service to Cloud Run..."
        gcloud run deploy order-service \
          --image gcr.io/$PROJECT_ID/order-service:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="DB_HOST=$DB_HOST,DB_PORT=$DB_PORT,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME,NODE_ENV=production"

    - name: Deploy Inventory Service
      run: |
        echo "Deploying Inventory Service to Cloud Run..."
        gcloud run deploy inventory-service \
          --image gcr.io/$PROJECT_ID/inventory-service:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="DB_HOST=$DB_HOST,DB_PORT=$DB_PORT,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME,NODE_ENV=production"

    - name: Deploy Notification Service
      run: |
        echo "Deploying Notification Service to Cloud Run..."
        gcloud run deploy notification-service \
          --image gcr.io/$PROJECT_ID/notification-service:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="DB_HOST=$DB_HOST,DB_PORT=$DB_PORT,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME,NODE_ENV=production" 